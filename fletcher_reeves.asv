function [location, optima, time, iterations_count] = fletcher_reeves (obj_function, symbols, solution, min, initial_point, number_of_iterations, optimum, fixed_step)
    iterations_count = 0;
    o = 0;
    pre_location = initial_point;
    location = [];
    tic;
    [location, optima ,o] = optimum_steepest_descent_iteration(symbols, pre_location, obj_function, min,0.001);
    
    if(min)
        gradient_factor = -1;
    else
        gradient_factor = 1;
    end
    direction = gradient_factor * subs(grad, symbols, init_point);
    
    while(o == false && iterations_count ~= number_of_iterations)
        [location, optima ,o] = fletcher_reeves_iteration(symbols, pre_location ,direction ,location, obj_function, min,0.001);
        iterations_count = iterations_count +1;
    end
    time = toc;
    plot_benchmark_result(obj_function, symbols,solution, location, optima);
end